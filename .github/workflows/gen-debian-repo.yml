name: Generate Debian Repo

on:
    workflow_dispatch:
    schedule:
        - cron: "20 */12 * * *"

jobs:
    Build-Repo:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Download v2ray rules dat
              run: |
                  bash -c "$(cat v2ray-rules-dat.sh)"
            - name: Download v2rayA
              run: |
                  bash -c "$(cat v2raya.sh)"
            - name: Download xray core
              run: |
                  bash -c "$(cat xray.sh)"
            - name: Download v2ray core
              run: |
                  bash -c "$(cat v2ray.sh)"
            - name: Download Juicity
              run: |
                  bash -c "$(cat juicity.sh)"
            - name: Download dae
              run: |
                  bash -c "$(cat dae.sh)"
            - name: Install nfpm
              shell: bash
              run: |
                  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
                  brew install goreleaser/tap/nfpm
            - name: Generate debian packages
              run: |
                  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
                  mkdir -p archive
                  for apps in v2ray v2raya xray juicity dae; do
                      VERSION="$(cat "${apps}"_version.txt)"
                      for arch in amd64 arm64 i386 riscv64; do
                          cat nfpm/$apps.yaml | sed "s/REAL_VERSION/$VERSION/g" | sed "s/REAL_ARCH/${arch}/g" > /tmp/${apps}_${arch}.yaml
                          nfpm package --config /tmp/${apps}_${arch}.yaml --target ./archive/${apps}_${VERSION}_${arch}.deb
                      done
                  done
                  DAT_VERSION="$(cat ./v2ray-rules-dat_version.txt)"
                  cat ./nfpm/v2ray-rules-dat.yaml | sed "s/REAL_VERSION/$DAT_VERSION/g" > /tmp/v2ray-rules-dat.yaml
                  nfpm package --config /tmp/v2ray-rules-dat.yaml --target ./archive/v2ray-rules-dat_${DAT_VERSION}_all.deb
            - name: Install reprepro gpg
              run: |
                sudo apt update
                sudo apt install -y reprepro gnupg
            - name: Import GPG key
              uses: crazy-max/ghaction-import-gpg@v6
              with:
                  gpg_private_key: ${{ secrets.PRIVATE_KEY }}
                  passphrase: ${{ secrets.PRIVATE_KEY_PWD }}
            - name: Export public key
              run: |
                  gpg --output public-key.asc --armor --export C27FABADF6B07760
            - name: Create Debian Repo
              run: |
                  bash -c "$(cat create-debian-repo.sh)"
                  cp public-key.asc repo/public-key.asc
                  npm i markdown-to-html-cli -g
                  markdown-to-html --output repo/index.html README.md
            - name: Compress repo
              run: |
                  zip -r repo.zip repo
            - name: Upload Artifact
              uses: nanoufo/action-upload-artifacts-and-release-assets@v2
              with:
                path: repo.zip